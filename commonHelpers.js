import{a as L,S as w,i as h}from"./assets/vendor-D1eTGYtO.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&a(c)}).observe(document,{childList:!0,subtree:!0});function r(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(e){if(e.ep)return;e.ep=!0;const o=r(e);fetch(e.href,o)}})();const x="https://pixabay.com/api/";async function m(s){try{return(await L.get(x,s)).data}catch(t){throw t}}function f(s){const t=document.querySelector(".gallery"),r=new w(".gallery a",{captionsData:"alt",captionDelay:250});let a=s.hits.map(e=>`
<div class='gallery-div'>
<a href= "${e.largeImageURL}">
<img class= "gallery-img" src = "${e.webformatURL}" alt= "${e.tags}"></img>
</a>
<div class="text-div">
<div class="text-item"><h5 class="text-title">Likes</h5><p class="text">${e.likes}</p></div>
<div class="text-item"><h5 class="text-title">Views</h5><p class="text">${e.views}</p></div>
<div class="text-item"><h5 class="text-title">Comments</h5><p class="text">${e.comments}</p></div>
<div class="text-item"><h5 class="text-title">Downloads</h5><p class="text">${e.downloads}</p></div>
</div>
</div>`).join("");t.insertAdjacentHTML("beforeend",a),r.refresh()}function q(){const s=document.querySelector(".gallery");s.innerHTML=""}function p(){const s=document.querySelector(".loading-div");s.innerHTML='<span class="loader"></span>'}function g(){const s=document.querySelector(".loading-div");s.innerHTML=""}class S{constructor(t,r){this.button=t,this.hiddenClass=r}hide(){this.button.classList.add(this.hiddenClass)}show(){this.button.classList.remove(this.hiddenClass)}disable(){this.button.disabled=!0}enable(){this.button.disabled=!1}}const M=document.querySelector(".result-receiver"),y=document.querySelector("#search"),d=document.querySelector("[data-start]"),b=document.querySelector(".load-button");let l="",u=0,n=1;const i=new S(b,"is-hidden");i.hide();v();document.addEventListener("input",v);document.addEventListener("submit",H);b.addEventListener("click",P);function v(){y.value.trim().length===0?d.setAttribute("disabled",""):d.removeAttribute("disabled")}function H(s){s.preventDefault(),q(),p(),l=y.value,m({params:{key:"45153082-ab6ff3a7cbec10f23fcc6c616",q:l,image_type:"photo",orientation:"horizontal",safesearch:!0,page:n,per_page:15}}).then(r=>{if(r.hits.length===0)throw i.hide(),i.disable(),new Error("No images found");i.show(),i.enable(),f(r)}).catch(()=>{h.show({message:"Sorry, there are no images matching your search query. Please try again!",color:"red",image:"/src/img/cat_error.jpg",imageWidth:60,position:"topRight"})}).finally(()=>{g(),M.reset()})}function P(){n+=1,p(),m({params:{key:"45153082-ab6ff3a7cbec10f23fcc6c616",q:l,image_type:"photo",orientation:"horizontal",safesearch:!0,page:n,per_page:15}}).then(t=>{console.log(t),u=t.totalHits,g();try{if(f(t),n*15>=u)throw new Error("No images found");i.show(),i.enable()}catch{i.disable(),i.hide(),h.error({message:"We're sorry, but you've reached the end of search results."})}})}
//# sourceMappingURL=commonHelpers.js.map
